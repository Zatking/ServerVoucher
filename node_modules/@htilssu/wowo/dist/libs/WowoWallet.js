"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WoWoWallet = void 0;
const axios_1 = __importDefault(require("axios"));
const utils_1 = require("./utils");
class WoWoWallet {
    apiKey;
    baseUrl = "https://api.wowo.htilssu.id.vn";
    req;
    /**
     * Tạo mới một instance của WoWoWallet
     * @param apiKey API KEY được cung cấp bởi WowoWallet
     * @param baseUrl URL của WowoWallet, mặc định là {@link https://api.wowo.htilssu.id.vn}
     */
    constructor(apiKey, baseUrl) {
        if (!apiKey) {
            throw new Error("API KEY không được để trống");
        }
        this.apiKey = apiKey;
        if (baseUrl && !(0, utils_1.isValidUrl)(baseUrl)) {
            throw new Error("Invalid baseUrl");
        }
        this.baseUrl = baseUrl ?? this.baseUrl;
        this.req = axios_1.default.create({
            baseURL: this.baseUrl,
            headers: {
                "X-API-KEY": this.apiKey
            }
        });
    }
    /**
     * Tạo một đơn hàng mới
     * @param props Thông tin đơn hàng
     */
    async createOrder(props) {
        if (props.items && props.items.length !== 0) {
            const itemHasNegativePriceOrNegativeQuantity = props.items.find(value => value.price < 0 || value.quantity <= 0);
            if (itemHasNegativePriceOrNegativeQuantity) {
                throw new Error("Giá của item phải lớn hơn hoặc bằng 0, Số lượng phải lớn hơn 0");
            }
        }
        if (props.amount < 0) {
            throw new Error('Số tiền phải lớn hơn hoặc bằng 0');
        }
        if (props.callback?.returnUrl && !(0, utils_1.isValidUrl)(props.callback.returnUrl)) {
            throw new Error("Đường dẫn return không hợp lệ");
        }
        if (!props.callback?.callbackUrl && !(0, utils_1.isValidUrl)(props.callback.callbackUrl)) {
            throw new Error("Đường dẫn callback không hợp lệ");
        }
        //check url callback
        if (props.callback && !(0, utils_1.isValidUrl)(props.callback.callbackUrl)) {
            throw new Error("Đường dẫn callback không hợp lệ");
        }
        const url = `${this.baseUrl}/v1/orders`;
        const response = await this.req.post(url, props);
        return response.data;
    }
    async cancelOrder(orderId) {
        const url = `${this.baseUrl}/v1/orders/${orderId}/cancel`;
        return await this.req.post(url);
    }
}
exports.WoWoWallet = WoWoWallet;
//# sourceMappingURL=WowoWallet.js.map